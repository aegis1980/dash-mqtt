{
  "src/lib/components/DashMqtt.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.",
    "displayName": "DashMqtt",
    "methods": [
      {
        "name": "_initMqttClient",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "_whatChanged",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "prevProps",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "state": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "This MQTT connection state (in the readyState prop) and any associated information.",
        "defaultValue": {
          "value": "{\n    connected : false, \n    reconnecting : false\n}",
          "computed": false
        }
      },
      "broker_url": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The MQTT broker endpoint (e.g. 'mqtt://test.mosquitto.org')."
      },
      "protocol": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "One the following protocols: 'mqtt', 'mqtts', 'tcp', 'tls', 'ws', 'wss'.\nDefaults to 'mqtt' which then is defaulted to 'ws' by MQTT.js \nFrom (https://github.com/mqttjs/MQTT.js/issues/628#issuecomment-345412483)\nThere is no way for JavaScript running in browsers to open TCP sockets so \"normal\" MQTT is impossible in browser apps. \nTo get around this limitation, MQTT.js uses MQTT over WebSockets instead when it detects it's running in a browser."
      },
      "broker_port": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The MQTT broker port, defaults to \nDefault to 8080 as MQTT over WebSockets, unencrypted as per\nhttps://test.mosquitto.org/"
      },
      "broker_path": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "MQTT broker path"
      },
      "options": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "MQTT options (optional).\nOtherwise defaults to DEFAULT_OPTIONS"
      },
      "topics": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "MQTT topics this component is subscribed to."
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "message": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Topic or topic and payload to send.\nWhen this property is set, a message is published\nThe topic is required, the payload is not."
      },
      "incoming": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Incoming message"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  }
}